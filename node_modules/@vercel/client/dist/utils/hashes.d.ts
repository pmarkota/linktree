/// <reference types="node" />
/// <reference types="node" />
export interface DeploymentFile {
    names: string[];
    data?: Buffer;
    mode: number;
}
export type FilesMap = Map<string | undefined, DeploymentFile>;
/**
 * Computes a hash for the given buf.
 *
 * @param {Buffer} file data
 * @return {String} hex digest
 */
export declare function hash(buf: Buffer): string;
/**
 * Transforms map to object
 * @param map with hashed files
 * @return {object}
 */
export declare const mapToObject: (map: FilesMap) => Record<string, DeploymentFile>;
/**
 * Computes hashes for the contents of each file given.
 *
 * @param files - absolute file paths
 * @param map - optional map of files to append
 * @return Map of hash digest to file object
 */
export declare function hashes(files: string[], map?: Map<string | undefined, DeploymentFile>): Promise<FilesMap>;
